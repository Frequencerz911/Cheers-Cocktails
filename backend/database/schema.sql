DROP TABLE IF EXISTS contact;
DROP TABLE IF EXISTS menu_recipe;
DROP TABLE IF EXISTS menu;
DROP TABLE IF EXISTS recipe_ingredient_quantity;
DROP TABLE IF EXISTS ingredient;
DROP TABLE IF EXISTS quantity;
DROP TABLE IF EXISTS type;
DROP TABLE IF EXISTS topic;
DROP TABLE IF EXISTS comment;
DROP TABLE IF EXISTS recipe;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS country;
DROP TABLE IF EXISTS role;


CREATE TABLE role (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  name VARCHAR(90) NOT NULL);

CREATE TABLE country (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  name VARCHAR(90) NOT NULL);

CREATE TABLE category (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  name VARCHAR(90) NOT NULL,
  is_alcool BOOLEAN DEFAULT FALSE);

CREATE TABLE user (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  firstname VARCHAR(80) NOT NULL,
  lastname VARCHAR(80) NOT NULL,
  nickname VARCHAR(80)  NOT NULL,
  email VARCHAR(80) NOT NULL UNIQUE,
  hash_password VARCHAR(255) NOT NULL,
  avatar VARCHAR(255),
  date_account_created DATETIME,
  role_id INT DEFAULT 1,
  FOREIGN KEY (role_id) REFERENCES role(id) ON UPDATE CASCADE);

CREATE TABLE recipe (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  title VARCHAR(90) NOT NULL,
  difficulty INT NOT NULL,
  preparation_time VARCHAR(10) NOT NULL,
  is_shared BOOLEAN NOT NULL DEFAULT FALSE,
  is_approved BOOLEAN NOT NULL DEFAULT FALSE,
  video VARCHAR(255) NOT NULL,
  user_id INT NOT NULL,
  FOREIGN KEY (user_id) REFERENCES user(id) ON UPDATE CASCADE,
  category_id INT NOT NULL,
  FOREIGN KEY (category_id) REFERENCES category(id) ON UPDATE CASCADE,
  country_id INT NOT NULL,
  FOREIGN KEY (country_id) REFERENCES country(id) ON UPDATE CASCADE);
  
CREATE TABLE comment (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  content TEXT NOT NULL,
  date DATETIME NOT NULL,
  recipe_id INT NOT NULL,
  FOREIGN KEY (recipe_id) REFERENCES recipe(id) ON UPDATE CASCADE,
  user_id INT NOT NULL,
  FOREIGN KEY (user_id) REFERENCES user(id) ON UPDATE CASCADE);

CREATE TABLE topic (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  name VARCHAR(90) NOT NULL);

CREATE TABLE type (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  type_name VARCHAR(10) NOT NULL,
  unit VARCHAR(5) NOT NULL);

CREATE TABLE quantity (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  value VARCHAR(10),
  type_id INT NOT NULL,
  FOREIGN KEY (type_id) REFERENCES type(id) ON UPDATE CASCADE);  

CREATE TABLE ingredient (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  name VARCHAR(80) NOT NULL);

CREATE TABLE recipe_ingredient_quantity (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  recipe_id INT NOT NULL,
  FOREIGN KEY (recipe_id) REFERENCES recipe(id) ON UPDATE CASCADE,
  ingredient_id INT NOT NULL,
  FOREIGN KEY (ingredient_id) REFERENCES ingredient(id) ON UPDATE CASCADE,
  quantity_id INT NOT NULL,
  FOREIGN KEY (quantity_id) REFERENCES quantity(id) ON UPDATE CASCADE);  

CREATE TABLE menu (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  name VARCHAR(30) NOT NULL,
  is_shared BOOLEAN NOT NULL,
  is_approved BOOLEAN NOT NULL,
  topic_id INT NOT NULL,
  FOREIGN KEY (topic_id) REFERENCES topic(id) ON UPDATE CASCADE);

CREATE TABLE menu_recipe (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  menu_id INT NOT NULL,
  FOREIGN KEY (menu_id) REFERENCES menu(id) ON UPDATE CASCADE,
  recipe_id INT NOT NULL,
  FOREIGN KEY (recipe_id) REFERENCES recipe(id) ON UPDATE CASCADE);

CREATE TABLE contact (
  id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  email VARCHAR(30) NOT NULL,
  object VARCHAR(60) NOT NULL,
  message TEXT NOT NULL,
  is_read BOOLEAN NOT NULL DEFAULT FALSE);
